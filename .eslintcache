[{"/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/index.js":"1","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/App.js":"2","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/pages/HomePage.js":"3","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/questions/QuestionPage.js":"4","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/questions/filters.js":"5","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/questions/UsersData.js":"6","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/Editor.js":"7","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/components/EditorTopBar.js":"8","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/styles/Main.js":"9","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/components/EditorMaster.js":"10","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/utils/utils.js":"11","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/styles/EditorLayout.js":"12","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/components/ConsoleLayout.js":"13","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/components/QuestionLayout.js":"14","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/components/SolutionLayout.js":"15","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/components/CodeEditor.js":"16","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/Navbar/Navbar.js":"17","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/Navbar/Button.js":"18","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/Navbar/Dropdown.js":"19","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/Navbar/MenuItems.js":"20","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/graphql/GET_USER.js":"21"},{"size":361,"mtime":1610134861699,"results":"22","hashOfConfig":"23"},{"size":2552,"mtime":1617463828680,"results":"24","hashOfConfig":"23"},{"size":12252,"mtime":1617440895687,"results":"25","hashOfConfig":"23"},{"size":7321,"mtime":1617442369755,"results":"26","hashOfConfig":"23"},{"size":1987,"mtime":1617466962894,"results":"27","hashOfConfig":"23"},{"size":84960,"mtime":1613659069946,"results":"28","hashOfConfig":"23"},{"size":2543,"mtime":1617461925831,"results":"29","hashOfConfig":"23"},{"size":4862,"mtime":1617388414889,"results":"30","hashOfConfig":"23"},{"size":454,"mtime":1617391635916,"results":"31","hashOfConfig":"23"},{"size":2668,"mtime":1617445606110,"results":"32","hashOfConfig":"23"},{"size":685,"mtime":1613232034087,"results":"33","hashOfConfig":"23"},{"size":3337,"mtime":1617391784505,"results":"34","hashOfConfig":"23"},{"size":2155,"mtime":1613294127893,"results":"35","hashOfConfig":"23"},{"size":4661,"mtime":1617461258853,"results":"36","hashOfConfig":"23"},{"size":2490,"mtime":1617388417009,"results":"37","hashOfConfig":"23"},{"size":2486,"mtime":1613810193493,"results":"38","hashOfConfig":"23"},{"size":2630,"mtime":1617465069405,"results":"39","hashOfConfig":"23"},{"size":250,"mtime":1617466594778,"results":"40","hashOfConfig":"23"},{"size":791,"mtime":1596682170000,"results":"41","hashOfConfig":"23"},{"size":365,"mtime":1596682170000,"results":"42","hashOfConfig":"23"},{"size":142,"mtime":1617462807568,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"vj21m6",{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/index.js",[],["96","97"],"/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/App.js",["98","99","100"],"/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/pages/HomePage.js",["101","102","103","104","105","106","107","108","109","110","111","112","113","114"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./HomePage.scss\";\nimport ip_image from \"../images/img1.png\";\nimport icon1 from \"../images/icon1.svg\";\nimport icon2 from \"../images/icon2.svg\";\nimport icon3 from \"../images/icon3.svg\";\nimport amazonLogo from \"../images/amazon_logo.png\";\nimport priyamLogo from \"../images/priyam2.png\";\nimport { CContainer, CRow, CCol, CCarousel,\n  CCarouselCaption,\n  CCarouselControl,\n  CCarouselIndicators,\n  CCarouselInner,\n  CCarouselItem,} from \"@coreui/react\";\nimport Editor from \"../editor/Editor\";\nimport Navbar from \"../Navbar/Navbar\";\n\nfunction HomePage() {\n  return (\n    <div className=\"homepage\" style={{ fontSize: \"62.5% !important\"}}>\n      {/* section - 1----------------------------------------------------------------------------- */}\n      <CContainer fluid=\"true\" className=\"mainC\">\n        <CContainer fluid=\"true\" className=\"backC\" />\n        <CContainer fluid=\"true\" className=\"frontC\">\n          <CRow className=\"frontC-row1 u-padding-left u-padding-right\">\n            {/* <CCol sm=\"3\" md=\"3\" lg=\"3\" className=\"frontC-row1-col1\">\n              <div className=\"frontC-row1-col1-obj\">\n                <p className=\"heading-primary--main\">\n                  <span>&#123;</span> AZ <span>&#125;</span>\n                </p>\n              </div>\n            </CCol>\n            <CCol sm=\"6\" md=\"6\" lg=\"6\" className=\"frontC-row1-col2\">\n              <div className=\"frontC-row1-col2-obj\">\n                <Link to=\"/questions\" className=\"btn2 btn2--white\">\n                  Problems\n                </Link>\n                <a href=\"#\" className=\"btn2 btn2--white\">\n                  Explore\n                </a>\n                <a href=\"#\" className=\"btn2 btn2--white\">\n                  Resources\n                </a>\n                <a href=\"#\" className=\"btn2 btn2--white\">\n                  Blog\n                </a>\n              </div>\n            </CCol>\n            <CCol sm=\"3\" md=\"3\" lg=\"3\" className=\"frontC-row1-col3\">\n              <div className=\"frontC-row1-col3-obj\">\n                <a href=\"#\" className=\"btn3 btn3--orange\">\n                  Login\n                </a>\n              </div>\n            </CCol> */}\n            \n          </CRow>\n\n          <CRow className=\"frontC-row2 u-padding-left u-padding-right\">\n            <CCol md=\"12\" lg=\"6\" className=\"frontC-row2-col1\">\n              <div className=\"frontC-row2-col1-obj\">\n                <p className=\"heading-primary--main u-margin-bottom-small\">\n                  Learn The Expert Way\n                </p>\n                <p className=\"heading-secondry--main u-margin-bottom-medium\">\n                  AlgoWhizz is the most suited platform to enhance <br />\n                  your technical skills required to ace coding interviews.\n                </p>\n                <a href=\"#\" className=\"btn btn--orange\">\n                  Create my Account\n                </a>\n              </div>\n            </CCol>\n\n            <CCol md=\"12\" lg=\"6\" className=\"frontC-row2-col2\">\n              <img src={ip_image} className=\"frontC-row2-col2-obj\" />\n            </CCol>\n          </CRow>\n        </CContainer>\n      </CContainer>\n      {/* section - 1 - ends -------------------------------------------------------------------------- */}\n\n      {/* section - 2 --------------------------------------------------------------------------------- */}\n      <CContainer\n        fluid=\"true\"\n        className=\"section2\"\n      >\n        <div className=\"section2-head\">\n          <p className=\"heading-primary--sub\">Why AlgoWhizz ?</p>\n        </div>\n        <div className=\"section2-body\">\n          <CRow className=\"section2-body-row\">\n            <CCol lg=\"4\" md=\"12\">\n              <div className=\"myCard\">\n                <div className=\"myCard-head\">\n                  <img src={icon2} className=\"myCard-head-icon\" />\n                </div>\n                <div className=\"myCard-body\">\n                  <p className=\"heading-secondry--sub\">\n                    200 carefully crafted Questions\n                  </p>\n                  <p className=\"myContent--sub\">\n                    Because this is something, we truly pay attention to. We\n                    have 200 carefully crafted questions verified and\n                    recommended by the industry experts.\n                  </p>\n                  <p className=\"myCard-btn myContent--main\">Learn More</p>\n                </div>\n              </div>\n            </CCol>\n            <CCol lg=\"4\" md=\"12\">\n              <div className=\"myCard\">\n                <div className=\"myCard-head\">\n                  <img src={icon1} className=\"myCard-head-icon\" />\n                </div>\n                <div className=\"myCard-body\">\n                  <p className=\"heading-secondry--sub\">\n                    Track your progress with Analytics\n                  </p>\n                  <p className=\"myContent--sub\">\n                    Because we know the importance of improving yourself each\n                    day, With AlgoProdigy, you can check your performance and\n                    assess your position among peers.\n                  </p>\n                  <p className=\"myCard-btn myContent--main \">Learn More</p>\n                </div>\n              </div>\n            </CCol>\n            <CCol lg=\"4\" md=\"12\">\n              <div className=\"myCard\">\n                <div className=\"myCard-head\">\n                  <img src={icon3} className=\"myCard-head-icon\" />\n                </div>\n                <div className=\"myCard-body\">\n                  <p className=\"heading-secondry--sub\">\n                    Video solutions tailored for you\n                  </p>\n                  <p className=\"myContent--sub\">\n                    Because we know that it’s not just about code but the\n                    thought process behind it, With AlgoProdigy you have access\n                    to most generalized video solutions at your fingertips.\n                  </p>\n                  <p className=\"myCard-btn myContent--main\">Learn More</p>\n                </div>\n              </div>\n            </CCol>\n          </CRow>\n        </div>\n      </CContainer>\n      {/* section - 2 - ends -------------------------------------------------------------------------- */}\n\n      {/* section - 3 --------------------------------------------------------------------------------- */}\n      <CContainer\n        fluid=\"true\"\n        className=\"section3 u-padding-left u-padding-right\"\n      ></CContainer>\n      {/* section - 3 - ends -------------------------------------------------------------------------- */}\n\n      {/* section - 4 --------------------------------------------------------------------------------- */}\n      <CContainer fluid=\"true\" className=\"section4\">\n        <div className=\"section4-head\">\n          <p className=\"heading-primary--sub\">\n            What our other users have said about us\n          </p>\n        </div>\n        <CCarousel animate>\n              <CCarouselInner>\n                <CCarouselItem>\n                  <div className=\"section4-body\">\n          <div className=\"section4-body-img\">\n            <img src={priyamLogo} className=\"section4Img\" />\n          </div>\n          <div className=\"section4-body-content\">\n            <div className=\"myCard2\">\n              <div className=\"myCard2-head\">\n                Mr. Priyam Bajpai\n                <br /> IIT Indore\n                <br /> Amazon SDE Intern Summer ‘21\n              </div>\n              <div className=\"myCard2-body\">\n                The well planned and well executed curriculum, along with the\n                excellent live classes were exactly what I needed. The inspiring\n                peer group and my mentor have finally put me on a focussed\n                track, and Scaler is the only thing that helps me code\n                regularly.\n              </div>\n              <div>\n                <img src={amazonLogo} className=\"myCard2-logo\" />\n              </div>\n            </div>\n          </div>\n        </div>\n                </CCarouselItem>\n                <CCarouselItem>\n                 <div className=\"section4-body\">\n          <div className=\"section4-body-img\">\n            <img src={priyamLogo} className=\"section4Img\" />\n          </div>\n          <div className=\"section4-body-content\">\n            <div className=\"myCard2\">\n              <div className=\"myCard2-head\">\n                Mr. Bajpai\n                <br /> IIT Indore\n                <br /> Amazon SDE Intern Summer ‘21\n              </div>\n              <div className=\"myCard2-body\">\n                The well planned and well executed curriculum, along with the\n                excellent live classes were exactly what I needed. The inspiring\n                peer group and my mentor have finally put me on a focussed\n                track, and Scaler is the only thing that helps me code\n                regularly.\n              </div>\n              <div>\n                <img src={amazonLogo} className=\"myCard2-logo\" />\n              </div>\n            </div>\n          </div>\n        </div>\n                </CCarouselItem>\n              </CCarouselInner>\n              <CCarouselControl direction=\"prev\"/>\n              <CCarouselControl direction=\"next\"/>\n            </CCarousel>\n        \n      </CContainer>\n      {/* section - 4 - ends -------------------------------------------------------------------------- */}\n\n      {/* section - 5 --------------------------------------------------------------------------------- */}\n      <CContainer fluid=\"true\" className=\"section5\">\n        <Editor/>\n      </CContainer>\n      {/* section - 5 - ends -------------------------------------------------------------------------- */}\n\n      {/* footer      --------------------------------------------------------------------------------- */}\n      <CContainer fluid=\"true\" className=\"myFooter\">\n        <a href=\"#\" className=\"btn btn--orange myFooter-btn\">\n          Kick off AlgoWhizz Now!\n        </a>\n        <CRow>\n          <CCol xs=\"3\" sm=\"12\" md=\"3\" lg=\"3\">\n            <p className=\"heading-primary--main\">\n              <span>&#123;</span> AlgoWhizz <span>&#125;</span>\n            </p>\n            <div className=\"myFooter-heading\">Stay Connected</div>\n            <div className=\"myFooter-body\">\n              Join our community to get bi-weekly tips on coding interviews.\n            </div>\n\n            {/* <form className=\"form\">\n              <input\n                type=\"email\"\n                className=\"form__field\"\n                placeholder=\"Your E-Mail Address\"\n              />\n              <button type=\"button\" className=\"myFooter-btn2 myFooter-btn2--primary\">\n                Send\n              </button>\n            </form> */}\n          </CCol>\n\n          <CCol xs=\"3\" sm=\"12\" md=\"3\" lg=\"3\">\n            <div className=\"myFooter-heading\">About Us</div>\n            <div className=\"myFooter-body\">\n              A bunch of geeks coming together to help you grab your dream job\n              because we believe that with the right preparation no goal is\n              unattainable.\n            </div>\n          </CCol>\n\n          <CCol xs=\"3\" sm=\"12\" md=\"3\" lg=\"3\">\n            <div className=\"myFooter-heading\">Useful Links</div>\n            <div className=\"myFooter-body\">\n              Contact us\n              <br /> Help Centre\n              <br /> University Connect\n              <br /> Terms & Conditions\n              <br />\n              Privacy policy\n            </div>\n          </CCol>\n\n          <CCol xs=\"3\" sm=\"12\" md=\"3\" lg=\"3\">\n            <div className=\"myFooter-heading\">Navigate</div>\n            <div className=\"myFooter-body\">\n              Coding Interview\n              <br /> Problems\n              <br /> Data structure\n              <br /> Crash course\n              <br /> Tutorials for beginners\n              <br /> Coding Interview Assesment\n              <br /> Coding Interview tips\n            </div>\n          </CCol>\n        </CRow>\n        <div className=\"myFooter-body\">\n              Engineered with <span className=\"heart\">&#9829;</span>.&nbsp; Copyright @ InterviewPrep .\n        </div>\n          \n      </CContainer>\n    </div>\n  );\n}\n\nexport default HomePage;\n","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/questions/QuestionPage.js",["115","116"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination,\n  CContainer,\n  CFormGroup,\n  CInputCheckbox,\n  CLabel,\n  CButton\n} from \"@coreui/react\";\nimport { CChartPie } from '@coreui/react-chartjs';\nimport { Company, Difficulty, List, Random } from \"./filters\";\nimport questionData, { size } from \"./UsersData\";\nimport CIcon from '@coreui/icons-react'\nimport '../index.css'\n\nconst difficultyMap = ['EASY', 'MEDIUM', 'HARD']\nconst topicTags = [\"Warmup\", \"Implementation\", \"Strings\", \"Sorting\", \"Search\", \"Graph Theory\", \"Greedy\", \"Dynamic Programming\", \"Constructive Algorithms\", \"Bit Manipulation\", \"Recursion\"]\nconst getBadge = (status) => {\n  switch (status) {\n    case 0:\n      return \"success\";\n    case 1:\n      return \"warning\";\n    case 2:\n      return \"danger\";\n    default:\n      return \"primary\";\n  }\n};\n\nconst convert = (t) => {\n  let obj = new Map()\n  t.map(tp => obj.set(tp ,false))\n  return obj;\n}\n\nconst QuestionPage = () => {\n  const history = useHistory();\n  \n  const [page, setPage] = useState(1);\n  const [difficulty, setDifficulty] = React.useState(-1)\n  const [questions, setQuestions] = React.useState(questionData)\n  const [tags, setTags] = React.useState(convert(topicTags))\n  \n  const pageChange = (newPage) => {\n    page !== newPage && setPage(newPage);\n  };\n\n  const handleDifficulty = (event) => {\n    const dif = parseInt(event.target.attributes.value.nodeValue)\n    if( dif === difficulty) {\n      setDifficulty(-1)\n    } else {\n      setDifficulty(dif)\n    }\n  }\n\n  const hangleTags = (event) => {\n    const name = event.target.name;\n    const prevTags = tags\n    prevTags.set(name, event.target.checked)\n    console.log(prevTags)\n    setTags(prevTags)\n  }\n  useEffect(() => {\n    if(difficulty !== -1)\n    {\n      const filteredQuestions = questionData.filter((q) => q.difficulty === difficulty)\n      setQuestions(filteredQuestions)\n    }else {\n      setQuestions(questionData)\n    }\n\n  }, [difficulty]);\n\n  return (\n    <CContainer>\n      <CRow style={{marginTop: '5vh'}}>\n        <CCol md={9} >\n          <CRow style={{ textAlign: 'center', margin: 'auto'}}>\n          <CCol md={2}></CCol>\n            <CCol md={4}>\n              <div className=\"foundation-text\">\n              Want to work on your basics?<br/>Check out our foundation course<br/> and strengthen your basics now\n              </div>\n            </CCol>\n            <CCol md={2}>\n              <CButton className=\"foundation-course\">\n                C++\n              </CButton>\n            </CCol>\n            <CCol md={2}>\n            <CButton className=\"foundation-course\">\n                Python\n              </CButton>\n            </CCol>\n            <CCol md={2}></CCol>\n            </CRow>\n            <hr/>\n          <CCard>\n            <CCardBody>\n            <CRow>\n              <CCol><Random /></CCol> \n              <div className=\"d-flex flex-row-reverse\">\n              <CIcon content={\"cilStar\"} size=\"2xl\"/>\n              <div className=\"p-1\"><Company /></div>\n              <div className=\"p-1\"><List /></div>\n              <div className=\"p-1\"><Difficulty val={difficulty} onChange={handleDifficulty} /></div>\n              </div>\n            </CRow>\n              <CDataTable\n                items={questions}\n                fields={[\n                  { key: \"name\", _classes: \"font-weight-bold\",_style: { width: '80%'} },\n                  \"difficulty\",\n                ]}\n                hover\n                striped\n                itemsPerPage={20}\n                activePage={page}\n                clickableRows\n                sorter\n                onRowClick={(item) => history.push(`/question/${item.slug}`)}\n                scopedSlots={{\n                  difficulty: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.difficulty)}>\n                        {difficultyMap[item.difficulty]}\n                      </CBadge>\n                    </td>\n                  ),\n                  // isSolved: (item) => (\n                  //   <td>\n                  //       {item.isSolved === 'true' ? \"Done\" : \"False\"}\n                  //   </td>\n                  // ),\n                }}\n              />\n              <CPagination\n                activePage={page}\n                onActivePageChange={pageChange}\n                pages={size / 20 + 1}\n                doubleArrows={false}\n                align=\"center\"\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol md={3} style={{ backgroundColor: \"\" }}>\n          <div className=\"sticky-top\">\n          <div>\n          <CChartPie\n            datasets={[\n              {\n                backgroundColor: [\n                  '#41B883',\n                  '#E46651',\n                ],\n                data: [80, 20]\n              }\n            ]}\n            labels={['Solved', 'Todo']}\n            options={{\n              tooltips: {\n                enabled: true\n              },\n              \n            }}\n          />\n          </div>\n            <CCard>\n              <CCardHeader>\n                Topics\n              </CCardHeader>\n              <CCardBody>\n              <CFormGroup>\n                { topicTags.map((topic) => (\n                <div style={{ margin: '10px 0'}}>\n                      <CFormGroup variant=\"checkbox\" className=\"checkbox\">\n                      <CInputCheckbox \n                        id={\"checkbox-\" + topic}\n                        name={topic} \n                        value={topic} \n                        checked={tags[`${topic}`]}\n                        onChange={hangleTags}\n                      />\n                      <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"checkbox1\">{topic}</CLabel>\n                    </CFormGroup>\n                    </div>))}     \n                    </CFormGroup>\n              </CCardBody>\n            </CCard>\n          </div>\n        </CCol>\n      </CRow>\n    </CContainer>\n  );\n};\n\nexport default QuestionPage;\n\n{/* <CFormGroup variant=\"custom-checkbox\" inline>\n                      <CInputCheckbox \n                        custom \n                        id=\"inline-checkbox1\" \n                        name=\"inline-checkbox1\" \n                        value=\"option1\" \n                      />\n                      <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox1\">One</CLabel>\n                    </CFormGroup> */}\n                    \n                //     <CFormGroup row>\n                    \n                //     <CFormGroup variant=\"checkbox\" className=\"checkbox\">\n                //       <CInputCheckbox id=\"checkbox2\" name=\"checkbox2\" value=\"option2\" />\n                //       <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"checkbox2\">Option 2</CLabel>\n                //     </CFormGroup>\n                //     <CFormGroup variant=\"checkbox\" className=\"checkbox\">\n                //       <CInputCheckbox id=\"checkbox3\" name=\"checkbox3\" value=\"option3\" />\n                //       <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"checkbox3\">Option 3</CLabel>\n                //     </CFormGroup>\n                // </CFormGroup>","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/questions/filters.js",["117","118","119","120","121","122","123","124","125","126","127","128","129"],"/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/questions/UsersData.js",[],"/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/Editor.js",["130","131","132","133","134","135"],"import React, { createContext } from \"react\";\nimport EditorMain from \"./components/EditorMaster\";\nimport EditorTopBar from \"./components/EditorTopBar\";\nimport { Main } from \"./styles/Main\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n  createHttpLink,\n  from,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { error_types } from './utils/utils'\nimport { useParams } from \"react-router\";\n\nconst LOAD_USERS = gql`\n  query AppQuery {\n    getUser {\n      _id\n      email\n    }\n  }\n`;\n\nconst initalEditorStyles = {\n  language: 54,\n  fontSize: 16,\n  theme: \"monokai\",\n}\n\nexport const EditorStylesContext = createContext();\n\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({ message, location, path }) => {\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\n\nconst link = from([errorLink, new HttpLink({uri: \"http://13.59.182.15:4000/graphql\", credentials: 'include'})]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link,\n});\n\nfunction Editor(props) {\n  console.log(\"props\" , props)\n  const { id } = useParams()\n  return (\n    <ApolloProvider client={client}>\n      <AppComp id={id} />\n    </ApolloProvider>\n  );\n}\n\nfunction reducer(state, event) {\n  const name = event.target.name;\n  const newState = {...state, [name]: event.target.value}\n  return newState\n}\n\nconst AppComp = (props) => {\n  const { error, loading, data } = useQuery(LOAD_USERS);\n  const questionSlug = \"longest-common-subsequence\"\n  console.log(questionSlug)\n  const [email, setEmail] = React.useState(null);\n  \n  const [editorStyles, setEditorStyles] = React.useReducer(reducer,initalEditorStyles)\n  \n  if (loading) return <div>loading</div>;\n  if(error) {\n    console.log(error)\n    if(error.message === \"NetworkError when attempting to fetch resource.\")\n    return <div>Network Error</div>\n    \n    const errorMsg = JSON.parse(error.message).msg\n    if(errorMsg == error_types.ERROR_UNAUTHENTICATED) {\n      window.open(\"http://13.59.182.15:4000/auth/github\");\n      return <div>Wait</div>\n    }\n    return <div>Loading</div>\n  }\n\n  return (\n    <Main>\n      <EditorStylesContext.Provider value={{ editorStyles, setEditorStyles }}>\n      <div className=\"row-options\">\n        <EditorTopBar />\n      </div>\n      <div className=\"row-editor\">\n        <EditorMain id={props.id} />\n      </div>\n      </EditorStylesContext.Provider>\n    </Main>\n  );\n};\n\nexport default Editor;\n","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/components/EditorTopBar.js",["136","137","138","139","140","141","142","143","144","145","146"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  AppBar,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  Tooltip,\n  Chip,\n  Button,\n} from \"@material-ui/core\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport { NavStyles } from \"../styles/EditorLayout\";\nimport clsx from \"clsx\";\nimport { EditorStylesContext } from \"../Editor\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  appBar: {\n    backgroundColor: \"#1A1829\",\n    \"& .Mui-selected\": {\n      backgroundColor: \"#262533\",\n    },\n  },\n  tab: {},\n  name: {\n    marginTop: theme.spacing(2),\n  },\n  difficulty: {\n    width: theme.spacing(2),\n    height: theme.spacing(2),\n    borderRadius: theme.spacing(2),\n    display: \"inline-block\",\n    backgroundColor: \"#008529\",\n  },\n  headers: {\n    fontWeight: \"bold\",\n  },\n  question: {\n    fontWeight: \"lighter\",\n  },\n  nav: {\n    \"& .MuiMenu-list\": {\n      backgroundColor: '#1A1829',\n      color: '#fff'\n    },\n    \"& .MuiOutlinedInput-root\": {\n      height: \"50px\",\n    },\n    \"& *:focus\": { outline: \"none !important\" },\n    \"& .MuiSelect-iconOutlined\": {\n      color: \"#fff\",\n    },\n    \"& .MuiInputBase-root\": {\n      \"& .Mui-focused\": {\n        border: \"none !important\",\n      },\n      color: \"#fff\",\n      backgroundColor: \"#1A1829\",\n      border: \"none\",\n    },\n    \"& .MuiSelect-root\": {\n      border: \"none\",\n    },\n    width: \"100%\",\n    borderRadius: \"0\",\n  },\n  grid: {\n    marginLeft: \"10px\",\n  },\n  timer: {\n    position: \"absolute\",\n    right: \"2vh\",\n    top: \"1vh\",\n    height: \"5vh\",\n    width: \"100%\",\n    backgroundColor: \"#1A1829 !important\",\n  },\n}));\n\nconst EditorTopBar = (props) => {\n  const classes = useStyles();\n  const { editorStyles, setEditorStyles } = React.useContext(\n    EditorStylesContext\n  );\n  const handleChange = (event) => {\n    //console.log(event);\n    const name = event.target.name;\n    setEditorStyles(event);\n  };\n  return (\n    <NavStyles>\n      <Grid container>\n        <Grid className=\"nav-element\" item lg={1} xs={6}>\n          <img src=\"./google2.0.0.webp\" alt=\"google\" />\n        </Grid>\n        <Grid className={classes.grid} item lg={1} xs={6}>\n          <FormControl variant=\"outlined\" className={classes.nav}>\n            {/* <InputLabel id=\"demo-simple-select-outlined-label\">Age</InputLabel> */}\n            <Select\n              id=\"demo-simple-select-outlined\"\n              value={editorStyles.language}\n              onChange={handleChange}\n              name=\"language\"\n            >\n              <MenuItem value={54}>C++</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid className={classes.grid} item lg={1} xs={6}>\n          <FormControl variant=\"outlined\" className={classes.nav}>\n            {/* <InputLabel id=\"demo-simple-select-outlined-label\">Age</InputLabel> */}\n            <Select\n              id=\"demo-simple-select-outlined\"\n              value={editorStyles.fontSize}\n              onChange={handleChange}\n              name=\"fontSize\"\n            >\n              <MenuItem value={15}>15px</MenuItem>\n              <MenuItem value={16}>16px</MenuItem>\n              <MenuItem value={17}>17px</MenuItem>\n              <MenuItem value={18}>18px</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid className={classes.grid} item lg={1} xs={6}>\n          <FormControl variant=\"outlined\" className={classes.nav}>\n            {/* <InputLabel id=\"demo-simple-select-outlined-label\">Age</InputLabel> */}\n            <Select\n              id=\"demo-simple-select-outlined\"\n              value={editorStyles.theme}\n              onChange={handleChange}\n              name=\"theme\"\n            >\n              <MenuItem value={\"monokai\"}>Monokai</MenuItem>\n              <MenuItem value={\"material\"}>Material</MenuItem>\n              <MenuItem value={\"midnight\"}>Midnight</MenuItem>\n              <MenuItem value={\"night\"}>Night</MenuItem>\n              <MenuItem value={\"solarized\"}>Solarized</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        \n        <Grid className={classes.timer} item lg={2} xs={12}>\n          <Button\n            startIcon={<ListIcon />}\n            className={classes.nav}\n            variant=\"contained\"\n          >\n            Questions\n          </Button>\n        </Grid>\n      </Grid>\n    </NavStyles>\n  );\n};\n\nexport default EditorTopBar;\n","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/styles/Main.js",[],"/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/components/EditorMaster.js",["147"],"import React from 'react';\nimport { ReflexContainer, ReflexSplitter, ReflexElement } from \"react-reflex\";\nimport \"react-reflex/styles.css\";\nimport { EditorLayout } from '../styles/EditorLayout'\nimport ConsoleLayout from './ConsoleLayout';\nimport QuestionLayout from './QuestionLayout';\nimport SolutionLayout from './SolutionLayout';\nimport { gql, useMutation } from '@apollo/client';\nimport { propTypes } from 'react-bootstrap/esm/Image';\n\nconst SUBMIT_CODE = gql`\n  mutation ($input: SubmissionInput!) {\n    submit(input: $input) {\n      _id\n    stdOut\n\t\tstdErr\n    compileOutput\n  \tstatusId\n    statusDescription\n    time\n    memory\n    compareResult\n    lastTestCase \n    expectedOutput\n    totalCorrect\n    createdAt\n   \tlanguageId\n    userId\n    questionId\n   \tcodeSubmitted\n    }\n  }\n`;\n\nconst EditorMain = (props) => {\n  const [solution, setSolution] = React.useState(\"\");\n  const [submitCode, { data, error, loading }] = useMutation(SUBMIT_CODE);\n\n    const onResize = (e) => {\n\n        if (e.domElement) {\n    \n          e.domElement.classList.add('resizing')\n        }\n      }\n    \n      const onStopResize = (e) => {\n    \n        if (e.domElement) {\n    \n          e.domElement.classList.remove('resizing')\n        }\n      }\n      const resizeProps = {\n          onResize,\n          onStopResize\n      }\n\n  return (\n      <EditorLayout>\n    <ReflexContainer orientation=\"horizontal\">\n      <ReflexElement>\n        <ReflexContainer orientation=\"vertical\">\n          <ReflexElement flex={0.5} {...resizeProps}>\n            <QuestionLayout id={props.id}/>\n          </ReflexElement>\n          <ReflexSplitter className=\"splitter-vertical\" {...resizeProps} />\n          <ReflexElement {...resizeProps}>\n            <ReflexContainer orientation=\"horizontal\">\n              <ReflexElement {...resizeProps}>\n                  <ReflexContainer orientation=\"vertical\">\n                    <ReflexElement renderOnResize propagateDimensionsRate={200} propagateDimensions {...resizeProps}>\n                      <SolutionLayout submitCode={submitCode} solution={solution} onChange={setSolution}/>\n                    </ReflexElement>\n                  </ReflexContainer>\n              </ReflexElement>\n              <ReflexSplitter className=\"splitter-horizontal\" {...resizeProps} />\n              <ReflexElement {...resizeProps}>\n                <ConsoleLayout solution={solution} submitCode={submitCode} data={data} error={error} loading={loading}/>\n              </ReflexElement>\n            </ReflexContainer>\n          </ReflexElement>\n        </ReflexContainer>\n      </ReflexElement>\n    </ReflexContainer>\n    </EditorLayout>\n  );\n};\n\nexport default EditorMain;","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/utils/utils.js",[],"/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/styles/EditorLayout.js",[],"/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/components/ConsoleLayout.js",["148","149","150","151","152"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  AppBar,\n  Tabs,\n  Tab,\n  Box,\n  Button,\n  IconButton,\n  TextField,\n} from \"@material-ui/core\";\n//import FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport { ConsoleMain } from \"../styles/EditorLayout\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  appBar: {\n    backgroundColor: \"#1A1829\",\n    \"& .Mui-selected\": {\n      backgroundColor: \"#262533\",\n    },\n    zIndex: theme.zIndex.AppBar + 1\n  },\n  tab: {},\n  name: {\n    marginTop: theme.spacing(2),\n  },\n  difficulty: {\n    width: theme.spacing(2),\n    height: theme.spacing(2),\n    borderRadius: theme.spacing(2),\n    display: \"inline-block\",\n    backgroundColor: \"#008529\",\n  },\n  headers: {\n    fontWeight: \"bold\",\n  },\n}));\n\nconst ConsoleLayout = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [testcase, setTestcase] = React.useState(\"\")\n  const difficulty = \"EASY\";\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <ConsoleMain className={classes.root}>\n      <AppBar className={classes.appBar} position=\"static\">\n        <Tabs\n          className={classes.tab}\n          indicatorColor={\"none\"}\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n        >\n          <Tab label=\"Test Cases\" />\n          <Tab label=\"Output\" />\n          <Button className=\"code-submit\" onClick={() => props.submitCode({ variables: { input: { questionId: \"ques_a1c9e586-4f79-46a0-bf60-1f17e6c70a7b\", sourceCode: props.solution, languageId: 54 }}})}>Submit</Button>\n        </Tabs>\n      </AppBar>\n      <Box p={2}>\n        {value === 0 &&\n          <TextField id=\"outlined-basic\" multiline className=\"testcase\" value={testcase} onChange={event => setTestcase(event.target.value)} variant=\"outlined\" />\n        }\n      </Box>\n    </ConsoleMain>\n  );\n};\n\nexport default ConsoleLayout;\n","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/components/QuestionLayout.js",["153","154","155","156","157","158","159"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  AppBar,\n  Tabs,\n  Tab,\n  Box,\n  Typography,\n  Tooltip,\n  Chip,\n} from \"@material-ui/core\";\nimport { QuestionMain } from \"../styles/EditorLayout\";\nimport clsx from \"clsx\";\nimport ReactHtmlParser, {\n  processNodes,\n  convertNodeToElement,\n  htmlparser2,\n} from \"react-html-parser\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst GET_QUESTION_LIST = gql`\n  query ($slug: String!){\n    getQuestionBySlug(slug : $slug){\n      _id\n      title\n      titleSlug\n      isFree\n      description\n    }\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  appBar: {\n    backgroundColor: \"#1A1829\",\n    \"& .Mui-selected\": {\n      backgroundColor: \"#262533\",\n    },\n  },\n  tab: {},\n  name: {\n    marginTop: theme.spacing(2),\n  },\n  difficulty: {\n    width: theme.spacing(2),\n    height: theme.spacing(2),\n    borderRadius: theme.spacing(2),\n    display: \"inline-block\",\n    backgroundColor: \"#008529\",\n  },\n  headers: {\n    fontWeight: \"bold\",\n  },\n  question: {\n    fontWeight: \"lighter\",\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <p>{children}</p>\n        </Box>\n      )}\n    </div>\n  );\n}\nconst QuestionLayout = (props) => {\n  const classes = useStyles();\n  const id = props.id ? props.id : \"longest-common-subsequence\"\n  const { data, loading, error } = useQuery(GET_QUESTION_LIST, {variables: { slug: id } });\n  const [value, setValue] = React.useState(0);\n  //console.log(error)\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <QuestionMain className={classes.root}>\n      <AppBar className={classes.appBar} position=\"static\">\n        <Tabs\n          //   variant=\"fullWidth\"\n          className={classes.tab}\n          indicatorColor={\"none\"}\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n        >\n          <Tab label=\"Problem\" />\n          <Tab label=\"Scratchpad\" />\n          <Tab label=\"Our Solution\" />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={1}>\n        Item Two\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Item Three\n      </TabPanel>\n      {value === 0 && (\n        <Box p={3}>\n          <Grid container spacing={1}>\n            {data ? <QuestionDetails data={data.getQuestionBySlug} /> : <div>Loadingg...</div>}\n          </Grid>\n        </Box>\n      )}\n    </QuestionMain>\n  );\n};\n\nconst QuestionDetails = ({ data }) => {\n  const classes = useStyles();\n  const difficulty = \"EASY\";\n  const questionLine = ReactHtmlParser('<p>' + data.description + '</p>');\n  //console.log(questionLine)\n  //const questionText = questionLine.replace(/\\n/g, \"<br />\")\n  const questionText = document.createElement(\"div\");\n  questionText.innerHTML = questionLine;\n\n  return (\n    <>\n      <Grid item xs={2}>\n        <Typography className={classes.headers} variant=\"body2\">\n          Difficulty:{\" \"}\n          {\n            <Tooltip title=\"Difficulty\">\n              <span\n                className={\n                  clsx[(difficulty.toLocaleLowerCase(), classes.difficulty)]\n                }\n                label={difficulty}\n              ></span>\n            </Tooltip>\n          }\n        </Typography>\n      </Grid>\n      <Grid item xs={2}>\n        <Typography className={classes.headers} variant=\"body2\">\n          Category:{\" \"}\n          {\n            <Tooltip title=\"Difficulty\">\n              <span\n                className={\n                  clsx[(difficulty.toLocaleLowerCase(), classes.difficulty)]\n                }\n                label={difficulty}\n              ></span>\n            </Tooltip>\n          }\n        </Typography>\n      </Grid>\n      <Grid container className={classes.name}>\n        <Grid item xs={6}>\n          <Typography variant=\"h5\">{data.title}</Typography>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Box p={0}>\n          {/* <Typography className={classes.question} variant=\"body2\"> */}\n          {/* <div dangerouslySetInnerHTML={{ __html: questionLine }}></div> */}\n          {<p>{questionLine}</p>}\n          {/* </Typography> */}\n        </Box>\n      </Grid>\n    </>\n  );\n};\nexport default QuestionLayout;\n","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/components/SolutionLayout.js",["160","161","162","163","164"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  AppBar,\n  Tabs,\n  Tab,\n  Box,\n  Button,\n  IconButton,\n} from \"@material-ui/core\";\nimport CodeEditor from \"./CodeEditor\";\nimport { SolutionMain } from \"../styles/EditorLayout\";\nimport clsx from \"clsx\";\nimport { EditorStylesContext } from '../Editor'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: \"#1A1829\",\n    \"& .Mui-selected\": {\n      backgroundColor: \"#262533\",\n    },\n  },\n  tab: {},\n  box: {\n    //flex: \"1 1 100%\",\n    //overflow: \"scroll\",\n    // paddingTop: theme.spacing(2),\n    // paddingBottom: theme.spacing(2),\n    //maxHeight: theme.spacing(10)\n  },\n}));\n\nconst SolutionLayout = (props) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const { editorStyles } = React.useContext(EditorStylesContext)\n  const difficulty = \"EASY\";\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  //console.log(data, error)\n  const useWindowSize = () => {\n    const [width, setWidth] = React.useState(undefined);\n\n    React.useEffect(() => {\n      const handleResize = () => {\n        setWidth(window.innerWidth);\n      }\n      window.addEventListener(\"resize\", handleResize);\n      handleResize();\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); \n    return width;\n  }\n  const width = useWindowSize();\n\n  return (\n    <SolutionMain className={classes.root}>\n      <AppBar className={classes.appBar} position=\"static\">\n        <Tabs\n          className={classes.tab}\n          indicatorColor={\"none\"}\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n        >\n          <Tab label=\"Your Solution\" />\n          <IconButton></IconButton>\n          <Button className=\"code-run\" onClick={() => props.submitCode({ variables: { input: { questionId: \"ques_5e995045-acac-446d-a400-e37665b1e116\", sourceCode: props.solution, languageId: 54 }}})}>{\"RUN\"}</Button>\n        </Tabs>\n      </AppBar>\n      <Box className={\"box\"}>\n        <CodeEditor\n          height={props.dimensions.height}\n          fontSize={editorStyles.fontSize}\n          theme={editorStyles.theme}\n          value={props.solution}\n          onChange={props.onChange}\n          displayName=\"Solution 1\"\n          language=\"cpp\"\n        />\n      </Box>\n    </SolutionMain>\n  );\n};\n\nexport default SolutionLayout;\n","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/editor/components/CodeEditor.js",["165","166","167","168","169"],"import React, { useState } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/addon/scroll/simplescrollbars.css\";\nimport \"codemirror/theme/monokai.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/theme/midnight.css\"\nimport \"codemirror/theme/night.css\";\nimport \"codemirror/theme/solarized.css\";\nimport \"codemirror/mode/clike/clike\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/addon/edit/closebrackets\";\nimport \"codemirror/addon/edit/matchbrackets\";\nimport \"codemirror/addon/edit/closetag\";\nimport \"codemirror/addon/edit/continuelist\";\nimport \"codemirror/addon/edit/matchtags\";\nimport \"codemirror/addon/edit/trailingspace\";\nimport \"codemirror/addon/fold/foldgutter\";\nimport \"codemirror/addon/fold/foldgutter.css\";\nimport \"codemirror/addon/fold/foldcode\";\nimport \"codemirror/addon/fold/brace-fold\";\nimport \"codemirror/addon/fold/comment-fold\";\nimport \"codemirror/addon/fold/indent-fold\";\nimport 'codemirror/addon/lint/lint.css';\nimport 'codemirror/addon/lint/lint';\n\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\nimport { EditorStyles } from \"../styles/EditorLayout\";\n\nconst CodeEditor = (props) => {\n  const { language, displayName, value, onChange } = props;\n  //const [open, setOpen] = useState(true);\n  const handleChange = (editor, data, value) => {\n    onChange(value);\n  };\n  const height = (props.height - 70).toString() + \"px !important\";\n  const fontSize = props.fontSize.toString() + \"px !important\";\n  const theme = props.theme\n  return (\n    <EditorStyles height={height} fontSize={fontSize}>\n      {/* <div className=\"editor-title\">\n        {displayName}\n      </div> */}\n      <ControlledEditor\n        className=\"code-editor\"\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        scroll={\"overlay\"}\n        options={{\n          styleActiveLine: true,\n          gutters: [\n            \"CodeMirror-linenumbers\",\n            \"CodeMirror-foldgutter\",\n            \"CodeMirror-lint-markers\",\n          ],\n          foldGutter: true,\n          autoCloseTags: true,\n          autoCloseBrackets: true,\n          matchBrackets: true,\n          matchTags: true,\n          lineWrapping: true,\n          smartIndent: true,\n          lineNumbers: true,\n          defaultTextHeight: 200,\n          theme: theme,\n          mode: \"text/x-c++src\",\n          lineNumbers: true,\n        }}\n      />\n    </EditorStyles>\n  );\n};\n\nexport default CodeEditor;\n","/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/Navbar/Navbar.js",["170","171","172","173"],"/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/Navbar/Button.js",[],"/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/Navbar/Dropdown.js",[],"/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/Navbar/MenuItems.js",[],"/home/gaurav/Documents/startup1/interviewprep/algoprodigy-frontend/src/graphql/GET_USER.js",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":18,"column":53,"nodeType":"180","messageId":"181","endLine":18,"endColumn":55},{"ruleId":"182","severity":1,"message":"183","line":32,"column":7,"nodeType":"184","messageId":"185","endLine":32,"endColumn":15},{"ruleId":"182","severity":1,"message":"186","line":59,"column":9,"nodeType":"184","messageId":"185","endLine":59,"endColumn":15},{"ruleId":"182","severity":1,"message":"187","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":14},{"ruleId":"182","severity":1,"message":"188","line":11,"column":3,"nodeType":"184","messageId":"185","endLine":11,"endColumn":19},{"ruleId":"182","severity":1,"message":"189","line":13,"column":3,"nodeType":"184","messageId":"185","endLine":13,"endColumn":22},{"ruleId":"182","severity":1,"message":"190","line":17,"column":8,"nodeType":"184","messageId":"185","endLine":17,"endColumn":14},{"ruleId":"191","severity":1,"message":"192","line":70,"column":17,"nodeType":"193","endLine":70,"endColumn":57},{"ruleId":"194","severity":1,"message":"195","line":77,"column":15,"nodeType":"193","endLine":77,"endColumn":70},{"ruleId":"194","severity":1,"message":"195","line":97,"column":19,"nodeType":"193","endLine":97,"endColumn":67},{"ruleId":"194","severity":1,"message":"195","line":115,"column":19,"nodeType":"193","endLine":115,"endColumn":67},{"ruleId":"194","severity":1,"message":"195","line":133,"column":19,"nodeType":"193","endLine":133,"endColumn":67},{"ruleId":"194","severity":1,"message":"195","line":172,"column":13,"nodeType":"193","endLine":172,"endColumn":61},{"ruleId":"194","severity":1,"message":"195","line":189,"column":17,"nodeType":"193","endLine":189,"endColumn":66},{"ruleId":"194","severity":1,"message":"195","line":198,"column":13,"nodeType":"193","endLine":198,"endColumn":61},{"ruleId":"194","severity":1,"message":"195","line":215,"column":17,"nodeType":"193","endLine":215,"endColumn":66},{"ruleId":"191","severity":1,"message":"192","line":237,"column":9,"nodeType":"193","endLine":237,"endColumn":62},{"ruleId":"182","severity":1,"message":"196","line":2,"column":22,"nodeType":"184","messageId":"185","endLine":2,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":210,"column":1,"nodeType":"199","messageId":"200","endLine":218,"endColumn":38},{"ruleId":"182","severity":1,"message":"201","line":4,"column":3,"nodeType":"184","messageId":"185","endLine":4,"endColumn":8},{"ruleId":"182","severity":1,"message":"202","line":5,"column":3,"nodeType":"184","messageId":"185","endLine":5,"endColumn":8},{"ruleId":"182","severity":1,"message":"203","line":6,"column":3,"nodeType":"184","messageId":"185","endLine":6,"endColumn":12},{"ruleId":"182","severity":1,"message":"204","line":7,"column":3,"nodeType":"184","messageId":"185","endLine":7,"endColumn":14},{"ruleId":"182","severity":1,"message":"205","line":8,"column":3,"nodeType":"184","messageId":"185","endLine":8,"endColumn":7},{"ruleId":"182","severity":1,"message":"206","line":10,"column":3,"nodeType":"184","messageId":"185","endLine":10,"endColumn":19},{"ruleId":"182","severity":1,"message":"207","line":11,"column":3,"nodeType":"184","messageId":"185","endLine":11,"endColumn":18},{"ruleId":"182","severity":1,"message":"208","line":15,"column":3,"nodeType":"184","messageId":"185","endLine":15,"endColumn":7},{"ruleId":"182","severity":1,"message":"209","line":16,"column":3,"nodeType":"184","messageId":"185","endLine":16,"endColumn":13},{"ruleId":"182","severity":1,"message":"210","line":17,"column":3,"nodeType":"184","messageId":"185","endLine":17,"endColumn":9},{"ruleId":"182","severity":1,"message":"211","line":18,"column":3,"nodeType":"184","messageId":"185","endLine":18,"endColumn":9},{"ruleId":"182","severity":1,"message":"212","line":19,"column":3,"nodeType":"184","messageId":"185","endLine":19,"endColumn":17},{"ruleId":"182","severity":1,"message":"213","line":22,"column":8,"nodeType":"184","messageId":"185","endLine":22,"endColumn":14},{"ruleId":"182","severity":1,"message":"214","line":10,"column":3,"nodeType":"184","messageId":"185","endLine":10,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":37,"column":53,"nodeType":"180","messageId":"181","endLine":37,"endColumn":55},{"ruleId":"182","severity":1,"message":"215","line":67,"column":27,"nodeType":"184","messageId":"185","endLine":67,"endColumn":31},{"ruleId":"182","severity":1,"message":"216","line":70,"column":10,"nodeType":"184","messageId":"185","endLine":70,"endColumn":15},{"ruleId":"182","severity":1,"message":"217","line":70,"column":17,"nodeType":"184","messageId":"185","endLine":70,"endColumn":25},{"ruleId":"218","severity":1,"message":"219","line":81,"column":17,"nodeType":"220","messageId":"221","endLine":81,"endColumn":19},{"ruleId":"182","severity":1,"message":"222","line":4,"column":3,"nodeType":"184","messageId":"185","endLine":4,"endColumn":8},{"ruleId":"182","severity":1,"message":"223","line":6,"column":3,"nodeType":"184","messageId":"185","endLine":6,"endColumn":9},{"ruleId":"182","severity":1,"message":"224","line":7,"column":3,"nodeType":"184","messageId":"185","endLine":7,"endColumn":7},{"ruleId":"182","severity":1,"message":"225","line":8,"column":3,"nodeType":"184","messageId":"185","endLine":8,"endColumn":6},{"ruleId":"182","severity":1,"message":"226","line":9,"column":3,"nodeType":"184","messageId":"185","endLine":9,"endColumn":6},{"ruleId":"182","severity":1,"message":"227","line":10,"column":3,"nodeType":"184","messageId":"185","endLine":10,"endColumn":13},{"ruleId":"182","severity":1,"message":"228","line":11,"column":3,"nodeType":"184","messageId":"185","endLine":11,"endColumn":10},{"ruleId":"182","severity":1,"message":"229","line":12,"column":3,"nodeType":"184","messageId":"185","endLine":12,"endColumn":7},{"ruleId":"182","severity":1,"message":"230","line":16,"column":8,"nodeType":"184","messageId":"185","endLine":16,"endColumn":22},{"ruleId":"182","severity":1,"message":"231","line":21,"column":8,"nodeType":"184","messageId":"185","endLine":21,"endColumn":12},{"ruleId":"182","severity":1,"message":"232","line":102,"column":11,"nodeType":"184","messageId":"185","endLine":102,"endColumn":15},{"ruleId":"182","severity":1,"message":"233","line":9,"column":10,"nodeType":"184","messageId":"185","endLine":9,"endColumn":19},{"ruleId":"182","severity":1,"message":"222","line":4,"column":3,"nodeType":"184","messageId":"185","endLine":4,"endColumn":8},{"ruleId":"182","severity":1,"message":"234","line":5,"column":3,"nodeType":"184","messageId":"185","endLine":5,"endColumn":7},{"ruleId":"182","severity":1,"message":"235","line":11,"column":3,"nodeType":"184","messageId":"185","endLine":11,"endColumn":13},{"ruleId":"182","severity":1,"message":"231","line":16,"column":8,"nodeType":"184","messageId":"185","endLine":16,"endColumn":12},{"ruleId":"182","severity":1,"message":"236","line":54,"column":9,"nodeType":"184","messageId":"185","endLine":54,"endColumn":19},{"ruleId":"182","severity":1,"message":"222","line":4,"column":3,"nodeType":"184","messageId":"185","endLine":4,"endColumn":8},{"ruleId":"182","severity":1,"message":"229","line":12,"column":3,"nodeType":"184","messageId":"185","endLine":12,"endColumn":7},{"ruleId":"182","severity":1,"message":"237","line":17,"column":3,"nodeType":"184","messageId":"185","endLine":17,"endColumn":15},{"ruleId":"182","severity":1,"message":"238","line":18,"column":3,"nodeType":"184","messageId":"185","endLine":18,"endColumn":23},{"ruleId":"182","severity":1,"message":"239","line":19,"column":3,"nodeType":"184","messageId":"185","endLine":19,"endColumn":14},{"ruleId":"182","severity":1,"message":"240","line":91,"column":17,"nodeType":"184","messageId":"185","endLine":91,"endColumn":24},{"ruleId":"182","severity":1,"message":"241","line":91,"column":26,"nodeType":"184","messageId":"185","endLine":91,"endColumn":31},{"ruleId":"182","severity":1,"message":"222","line":4,"column":3,"nodeType":"184","messageId":"185","endLine":4,"endColumn":8},{"ruleId":"182","severity":1,"message":"234","line":5,"column":3,"nodeType":"184","messageId":"185","endLine":5,"endColumn":7},{"ruleId":"182","severity":1,"message":"231","line":15,"column":8,"nodeType":"184","messageId":"185","endLine":15,"endColumn":12},{"ruleId":"182","severity":1,"message":"236","line":42,"column":9,"nodeType":"184","messageId":"185","endLine":42,"endColumn":19},{"ruleId":"182","severity":1,"message":"242","line":60,"column":9,"nodeType":"184","messageId":"185","endLine":60,"endColumn":14},{"ruleId":"182","severity":1,"message":"243","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"244","line":30,"column":11,"nodeType":"184","messageId":"185","endLine":30,"endColumn":19},{"ruleId":"182","severity":1,"message":"245","line":30,"column":21,"nodeType":"184","messageId":"185","endLine":30,"endColumn":32},{"ruleId":"246","severity":1,"message":"247","line":47,"column":9,"nodeType":"248","endLine":47,"endColumn":40},{"ruleId":"249","severity":1,"message":"250","line":67,"column":11,"nodeType":"251","messageId":"221","endLine":67,"endColumn":22},{"ruleId":"182","severity":1,"message":"252","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":16},{"ruleId":"182","severity":1,"message":"253","line":9,"column":10,"nodeType":"184","messageId":"185","endLine":9,"endColumn":18},{"ruleId":"182","severity":1,"message":"254","line":14,"column":9,"nodeType":"184","messageId":"185","endLine":14,"endColumn":21},{"ruleId":"182","severity":1,"message":"255","line":22,"column":9,"nodeType":"184","messageId":"185","endLine":22,"endColumn":21},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'HomePage' is assigned a value but never used.","Identifier","unusedVar","'Editor' is assigned a value but never used.","'Link' is defined but never used.","'CCarouselCaption' is defined but never used.","'CCarouselIndicators' is defined but never used.","'Navbar' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useLocation' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'CForm' is defined but never used.","'CCard' is defined but never used.","'CCardBody' is defined but never used.","'CCardHeader' is defined but never used.","'CCol' is defined but never used.","'CDropdownDivider' is defined but never used.","'CDropdownHeader' is defined but never used.","'CRow' is defined but never used.","'CFormGroup' is defined but never used.","'CLabel' is defined but never used.","'CInput' is defined but never used.","'CInputCheckbox' is defined but never used.","'Select' is defined but never used.","'createHttpLink' is defined but never used.","'data' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Paper' is defined but never used.","'AppBar' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'Tooltip' is defined but never used.","'Chip' is defined but never used.","'FormHelperText' is defined but never used.","'clsx' is defined but never used.","'name' is assigned a value but never used.","'propTypes' is defined but never used.","'Grid' is defined but never used.","'IconButton' is defined but never used.","'difficulty' is assigned a value but never used.","'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'width' is assigned a value but never used.","'useState' is defined but never used.","'language' is assigned a value but never used.","'displayName' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-dupe-keys","Duplicate key 'lineNumbers'.","ObjectExpression","'Dropdown' is defined but never used.","'dropdown' is assigned a value but never used.","'onMouseEnter' is assigned a value but never used.","'onMouseLeave' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]